<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.verificer.base_user.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.verificer.base_user.entity.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="channel_id" jdbcType="VARCHAR" property="channelId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="google_secret" jdbcType="VARCHAR" property="googleSecret" />
    <result column="google_secret_auth" jdbcType="BIT" property="googleSecretAuth" />
    <result column="has_pay_password" jdbcType="BIT" property="hasPayPassword" />
    <result column="id_card_no" jdbcType="VARCHAR" property="idCardNo" />
    <result column="id_info_status" jdbcType="TINYINT" property="idInfoStatus" />
    <result column="inviter" jdbcType="BIGINT" property="inviter" />
    <result column="invite_code" jdbcType="VARCHAR" property="inviteCode" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="last_login_time" jdbcType="BIGINT" property="lastLoginTime" />
    <result column="mail_auth" jdbcType="BIT" property="mailAuth" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="mobile_auth" jdbcType="BIT" property="mobileAuth" />
    <result column="national_id" jdbcType="BIGINT" property="nationalId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="pay_password" jdbcType="VARCHAR" property="payPassword" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="reg_time" jdbcType="BIGINT" property="regTime" />
    <result column="reg_type" jdbcType="TINYINT" property="regType" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="login_token" jdbcType="VARCHAR" property="loginToken" />
    <result column="invite_link" jdbcType="VARCHAR" property="inviteLink" />
    <result column="relation" jdbcType="VARCHAR" property="relation" />
    <result column="google_auth_is_open" jdbcType="BIT" property="googleAuthIsOpen" />
    <result column="withdraw_google_auth_is_open" jdbcType="BIT" property="withdrawGoogleAuthIsOpen" />
    <result column="is_insider" jdbcType="BIT" property="isInsider" />
    <result column="is_allow_robot_api" jdbcType="BIT" property="isAllowRobotApi" />
    <result column="is_qmgt_exchange_account" jdbcType="BIT" property="isQmgtExchangeAccount" />
    <result column="has_recharge" jdbcType="TINYINT" property="hasRecharge" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="links" jdbcType="VARCHAR" property="links" />
    <result column="wallet_address" jdbcType="VARCHAR" property="walletAddress" />
    <result column="Is_activation" jdbcType="BIT" property="isActivation" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, username, channel_id, create_time, email, enable, google_secret, google_secret_auth, 
    has_pay_password, id_card_no, id_info_status, inviter, invite_code, last_login_ip, 
    last_login_time, mail_auth, mobile, mobile_auth, national_id, password, pay_password, 
    first_name, last_name, real_name, reg_time, reg_type, update_time, login_token, invite_link, 
    relation, google_auth_is_open, withdraw_google_auth_is_open, is_insider, is_allow_robot_api, 
    is_qmgt_exchange_account, has_recharge, avatar, nick_name, remark, links, wallet_address, 
    Is_activation
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from customer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from customer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.verificer.base_user.entity.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (username, channel_id, create_time, 
      email, enable, google_secret, 
      google_secret_auth, has_pay_password, id_card_no, 
      id_info_status, inviter, invite_code, 
      last_login_ip, last_login_time, mail_auth, 
      mobile, mobile_auth, national_id, 
      password, pay_password, first_name, 
      last_name, real_name, reg_time, 
      reg_type, update_time, login_token, 
      invite_link, relation, google_auth_is_open, 
      withdraw_google_auth_is_open, is_insider, is_allow_robot_api, 
      is_qmgt_exchange_account, has_recharge, avatar, 
      nick_name, remark, links, 
      wallet_address, Is_activation)
    values (#{username,jdbcType=VARCHAR}, #{channelId,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{email,jdbcType=VARCHAR}, #{enable,jdbcType=BIT}, #{googleSecret,jdbcType=VARCHAR}, 
      #{googleSecretAuth,jdbcType=BIT}, #{hasPayPassword,jdbcType=BIT}, #{idCardNo,jdbcType=VARCHAR}, 
      #{idInfoStatus,jdbcType=TINYINT}, #{inviter,jdbcType=BIGINT}, #{inviteCode,jdbcType=VARCHAR}, 
      #{lastLoginIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=BIGINT}, #{mailAuth,jdbcType=BIT}, 
      #{mobile,jdbcType=VARCHAR}, #{mobileAuth,jdbcType=BIT}, #{nationalId,jdbcType=BIGINT}, 
      #{password,jdbcType=VARCHAR}, #{payPassword,jdbcType=VARCHAR}, #{firstName,jdbcType=VARCHAR}, 
      #{lastName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{regTime,jdbcType=BIGINT}, 
      #{regType,jdbcType=TINYINT}, #{updateTime,jdbcType=BIGINT}, #{loginToken,jdbcType=VARCHAR}, 
      #{inviteLink,jdbcType=VARCHAR}, #{relation,jdbcType=VARCHAR}, #{googleAuthIsOpen,jdbcType=BIT}, 
      #{withdrawGoogleAuthIsOpen,jdbcType=BIT}, #{isInsider,jdbcType=BIT}, #{isAllowRobotApi,jdbcType=BIT}, 
      #{isQmgtExchangeAccount,jdbcType=BIT}, #{hasRecharge,jdbcType=TINYINT}, #{avatar,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{links,jdbcType=VARCHAR}, 
      #{walletAddress,jdbcType=VARCHAR}, #{isActivation,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.verificer.base_user.entity.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="googleSecret != null">
        google_secret,
      </if>
      <if test="googleSecretAuth != null">
        google_secret_auth,
      </if>
      <if test="hasPayPassword != null">
        has_pay_password,
      </if>
      <if test="idCardNo != null">
        id_card_no,
      </if>
      <if test="idInfoStatus != null">
        id_info_status,
      </if>
      <if test="inviter != null">
        inviter,
      </if>
      <if test="inviteCode != null">
        invite_code,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="mailAuth != null">
        mail_auth,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="mobileAuth != null">
        mobile_auth,
      </if>
      <if test="nationalId != null">
        national_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="payPassword != null">
        pay_password,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="regType != null">
        reg_type,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="loginToken != null">
        login_token,
      </if>
      <if test="inviteLink != null">
        invite_link,
      </if>
      <if test="relation != null">
        relation,
      </if>
      <if test="googleAuthIsOpen != null">
        google_auth_is_open,
      </if>
      <if test="withdrawGoogleAuthIsOpen != null">
        withdraw_google_auth_is_open,
      </if>
      <if test="isInsider != null">
        is_insider,
      </if>
      <if test="isAllowRobotApi != null">
        is_allow_robot_api,
      </if>
      <if test="isQmgtExchangeAccount != null">
        is_qmgt_exchange_account,
      </if>
      <if test="hasRecharge != null">
        has_recharge,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="links != null">
        links,
      </if>
      <if test="walletAddress != null">
        wallet_address,
      </if>
      <if test="isActivation != null">
        Is_activation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="googleSecret != null">
        #{googleSecret,jdbcType=VARCHAR},
      </if>
      <if test="googleSecretAuth != null">
        #{googleSecretAuth,jdbcType=BIT},
      </if>
      <if test="hasPayPassword != null">
        #{hasPayPassword,jdbcType=BIT},
      </if>
      <if test="idCardNo != null">
        #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="idInfoStatus != null">
        #{idInfoStatus,jdbcType=TINYINT},
      </if>
      <if test="inviter != null">
        #{inviter,jdbcType=BIGINT},
      </if>
      <if test="inviteCode != null">
        #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=BIGINT},
      </if>
      <if test="mailAuth != null">
        #{mailAuth,jdbcType=BIT},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mobileAuth != null">
        #{mobileAuth,jdbcType=BIT},
      </if>
      <if test="nationalId != null">
        #{nationalId,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null">
        #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=BIGINT},
      </if>
      <if test="regType != null">
        #{regType,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="loginToken != null">
        #{loginToken,jdbcType=VARCHAR},
      </if>
      <if test="inviteLink != null">
        #{inviteLink,jdbcType=VARCHAR},
      </if>
      <if test="relation != null">
        #{relation,jdbcType=VARCHAR},
      </if>
      <if test="googleAuthIsOpen != null">
        #{googleAuthIsOpen,jdbcType=BIT},
      </if>
      <if test="withdrawGoogleAuthIsOpen != null">
        #{withdrawGoogleAuthIsOpen,jdbcType=BIT},
      </if>
      <if test="isInsider != null">
        #{isInsider,jdbcType=BIT},
      </if>
      <if test="isAllowRobotApi != null">
        #{isAllowRobotApi,jdbcType=BIT},
      </if>
      <if test="isQmgtExchangeAccount != null">
        #{isQmgtExchangeAccount,jdbcType=BIT},
      </if>
      <if test="hasRecharge != null">
        #{hasRecharge,jdbcType=TINYINT},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="links != null">
        #{links,jdbcType=VARCHAR},
      </if>
      <if test="walletAddress != null">
        #{walletAddress,jdbcType=VARCHAR},
      </if>
      <if test="isActivation != null">
        #{isActivation,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.verificer.base_user.entity.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update customer
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="googleSecret != null">
        google_secret = #{googleSecret,jdbcType=VARCHAR},
      </if>
      <if test="googleSecretAuth != null">
        google_secret_auth = #{googleSecretAuth,jdbcType=BIT},
      </if>
      <if test="hasPayPassword != null">
        has_pay_password = #{hasPayPassword,jdbcType=BIT},
      </if>
      <if test="idCardNo != null">
        id_card_no = #{idCardNo,jdbcType=VARCHAR},
      </if>
      <if test="idInfoStatus != null">
        id_info_status = #{idInfoStatus,jdbcType=TINYINT},
      </if>
      <if test="inviter != null">
        inviter = #{inviter,jdbcType=BIGINT},
      </if>
      <if test="inviteCode != null">
        invite_code = #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=BIGINT},
      </if>
      <if test="mailAuth != null">
        mail_auth = #{mailAuth,jdbcType=BIT},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mobileAuth != null">
        mobile_auth = #{mobileAuth,jdbcType=BIT},
      </if>
      <if test="nationalId != null">
        national_id = #{nationalId,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null">
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=BIGINT},
      </if>
      <if test="regType != null">
        reg_type = #{regType,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="loginToken != null">
        login_token = #{loginToken,jdbcType=VARCHAR},
      </if>
      <if test="inviteLink != null">
        invite_link = #{inviteLink,jdbcType=VARCHAR},
      </if>
      <if test="relation != null">
        relation = #{relation,jdbcType=VARCHAR},
      </if>
      <if test="googleAuthIsOpen != null">
        google_auth_is_open = #{googleAuthIsOpen,jdbcType=BIT},
      </if>
      <if test="withdrawGoogleAuthIsOpen != null">
        withdraw_google_auth_is_open = #{withdrawGoogleAuthIsOpen,jdbcType=BIT},
      </if>
      <if test="isInsider != null">
        is_insider = #{isInsider,jdbcType=BIT},
      </if>
      <if test="isAllowRobotApi != null">
        is_allow_robot_api = #{isAllowRobotApi,jdbcType=BIT},
      </if>
      <if test="isQmgtExchangeAccount != null">
        is_qmgt_exchange_account = #{isQmgtExchangeAccount,jdbcType=BIT},
      </if>
      <if test="hasRecharge != null">
        has_recharge = #{hasRecharge,jdbcType=TINYINT},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="links != null">
        links = #{links,jdbcType=VARCHAR},
      </if>
      <if test="walletAddress != null">
        wallet_address = #{walletAddress,jdbcType=VARCHAR},
      </if>
      <if test="isActivation != null">
        Is_activation = #{isActivation,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.verificer.base_user.entity.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update customer
    set username = #{username,jdbcType=VARCHAR},
      channel_id = #{channelId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=BIT},
      google_secret = #{googleSecret,jdbcType=VARCHAR},
      google_secret_auth = #{googleSecretAuth,jdbcType=BIT},
      has_pay_password = #{hasPayPassword,jdbcType=BIT},
      id_card_no = #{idCardNo,jdbcType=VARCHAR},
      id_info_status = #{idInfoStatus,jdbcType=TINYINT},
      inviter = #{inviter,jdbcType=BIGINT},
      invite_code = #{inviteCode,jdbcType=VARCHAR},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=BIGINT},
      mail_auth = #{mailAuth,jdbcType=BIT},
      mobile = #{mobile,jdbcType=VARCHAR},
      mobile_auth = #{mobileAuth,jdbcType=BIT},
      national_id = #{nationalId,jdbcType=BIGINT},
      password = #{password,jdbcType=VARCHAR},
      pay_password = #{payPassword,jdbcType=VARCHAR},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=BIGINT},
      reg_type = #{regType,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      login_token = #{loginToken,jdbcType=VARCHAR},
      invite_link = #{inviteLink,jdbcType=VARCHAR},
      relation = #{relation,jdbcType=VARCHAR},
      google_auth_is_open = #{googleAuthIsOpen,jdbcType=BIT},
      withdraw_google_auth_is_open = #{withdrawGoogleAuthIsOpen,jdbcType=BIT},
      is_insider = #{isInsider,jdbcType=BIT},
      is_allow_robot_api = #{isAllowRobotApi,jdbcType=BIT},
      is_qmgt_exchange_account = #{isQmgtExchangeAccount,jdbcType=BIT},
      has_recharge = #{hasRecharge,jdbcType=TINYINT},
      avatar = #{avatar,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      links = #{links,jdbcType=VARCHAR},
      wallet_address = #{walletAddress,jdbcType=VARCHAR},
      Is_activation = #{isActivation,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!--以上代码自动生成-->

  <select id="selectByEmail" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer
    where email = #{email}
  </select>

  <select id="selectByMobile" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer
    where mobile = #{mobile}
  </select>

  <select id="selectByWalletAddress"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer
    where wallet_address = #{walletAddress}
  </select>

  <select id="selectByUsername" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer
    where username = #{username}
  </select>

  <select id="selectByInviteCode" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer
    where invite_code = #{inviteCode}
  </select>

  <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer
    where id = #{id}
    for update
  </select>

  <sql id="pageQueryCond">
    WHERE 1=1
    <if test="mobile !=null and mobile !=''">
      AND c.mobile like concat(concat("%",#{mobile}),"%")
    </if>
    <if test="email !=null and email !=''">
      AND c.email like concat(concat("%",#{email}),"%")
    </if>
    <if test="nationalId !=null">
      AND c.national_id = #{nationalId}
    </if>
    <if test="realName !=null and realName != ''">
      AND c.real_name like concat(concat("%",#{realName}),"%")
    </if>
    <if test="username !=null and username != ''">
      AND c.username like concat(concat("%",#{username}),"%")
    </if>
    <if test="nickname !=null and nickname != ''">
      AND c.nickname like concat(concat("%",#{nickname}),"%")
    </if>
    <if test="roleName !=null and roleName != ''">
      AND c.role_name like concat(concat("%",#{roleName}),"%")
    </if>
    <if test="idCardNum !=null and idCardNum != ''">
      AND cv.id_card_num = idCardNum
    </if>
    <if test="idInfoStatus !=null">
      AND c.id_info_status = idInfoStatus
    </if>
    <if test="enable !=null">
      AND c.enable = enable
    </if>
    <if test="registerStartTime !=null">
      AND  c.reg_time &gt; #{registerStartTime}
    </if>
    <if test="registerEndTime !=null">
      AND  #{registerEndTime} &gt; c.reg_time
    </if>
    <if test="loginStartTime !=null">
      AND  c.last_login_time &gt; #{loginStartTime}
    </if>
    <if test="loginEndTime !=null">
      AND  #{loginEndTime} &gt; c.last_login_time
    </if>
  </sql>


  <select id="page" parameterType="com.verificer.beans.CustomerListQueryVo" resultMap="BaseResultMap">
    select
    c.*
    from customer c
    LEFT JOIN customer_verified cv ON (c.id = cv.customer_id)
    <include refid="pageQueryCond" />
    ORDER by id desc
    limit #{from},#{limit}
  </select>

  <select id="count" parameterType="com.verificer.beans.CustomerListQueryVo" resultType="int">
    select
    count(*)
    from customer c
    LEFT JOIN customer_verified cv ON (c.id = cv.customer_id)
    <include refid="pageQueryCond" />
  </select>




  <select id="selectByRoleId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer
    WHERE role_id = #{roleId}
  </select>


  <select id="selectByNickname" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer
    WHERE nickname  like concat(concat("%",#{nickname}),"%") exOrder by id limit #{limit}
  </select>


<!--  以下内容只适用于当前项目-->

  <sql id="extPageCond">
    where 1=1
    <if test="id != null">
      and cus.id = #{id}
    </if>
    <if test="userType != null">
      and user_type = #{userType}
    </if>
    <if test="projectId != null">
      and rcp.project_id = #{projectId}
    </if>
    <if test="companyReviewStatus != null">
      and com.certification_status = #{companyReviewStatus}
    </if>
    <if test="role != null">
      and  com.role = #{role}
    </if>
    <if test="roles != null and roles.length > 0">
      and com.role in
      <foreach collection="roles" item="role" index="index" open="(" close=")" separator=",">
        #{role}
      </foreach>
    </if>
    <if test="excludeProjectId != null">
      and com.id not in (select company_id from rr_company_project where project_id = #{excludeProjectId})
    </if>
  </sql>

  <select id="extendPage" resultMap="BaseResultMap">
    select distinct cus.*
    from customer cus
        join r_customer_company rcc on (cus.id = rcc.customer_id)
        join company com on (rcc.company_id = com.id)
        left join rr_company_project rcp on (rcc.company_id = rcp.company_id)
    <include refid="extPageCond"></include>
    ORDER by id desc
    limit #{from},#{limit}
  </select>

  <select id="extendCount" resultType="int">
    select count(distinct cus.id)
    from customer cus
    join r_customer_company rcc on (cus.id = rcc.customer_id)
    join company com on (rcc.company_id = com.id)
    left join rr_company_project rcp on (rcc.company_id = rcp.company_id)
    <include refid="extPageCond"></include>

  </select>
</mapper>
