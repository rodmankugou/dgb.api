<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.verificer.account.provider.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.verificer.account.provider.entity.Account">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="customer_id" jdbcType="VARCHAR" property="customerId" />
    <result column="sub_name" jdbcType="VARCHAR" property="subName" />
    <result column="available_amount" jdbcType="DECIMAL" property="availableAmount" />
    <result column="frozen_amount" jdbcType="DECIMAL" property="frozenAmount" />
    <result column="negative_flag" jdbcType="BIT" property="negativeFlag" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, customer_id, sub_name, available_amount, frozen_amount, negative_flag, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.verificer.account.provider.entity.Account">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account (customer_id, sub_name, available_amount, 
      frozen_amount, negative_flag, create_time, 
      update_time)
    values (#{customerId,jdbcType=VARCHAR}, #{subName,jdbcType=VARCHAR}, #{availableAmount,jdbcType=DECIMAL}, 
      #{frozenAmount,jdbcType=DECIMAL}, #{negativeFlag,jdbcType=BIT}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.verificer.account.provider.entity.Account">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="subName != null">
        sub_name,
      </if>
      <if test="availableAmount != null">
        available_amount,
      </if>
      <if test="frozenAmount != null">
        frozen_amount,
      </if>
      <if test="negativeFlag != null">
        negative_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="subName != null">
        #{subName,jdbcType=VARCHAR},
      </if>
      <if test="availableAmount != null">
        #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="frozenAmount != null">
        #{frozenAmount,jdbcType=DECIMAL},
      </if>
      <if test="negativeFlag != null">
        #{negativeFlag,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.verificer.account.provider.entity.Account">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="subName != null">
        sub_name = #{subName,jdbcType=VARCHAR},
      </if>
      <if test="availableAmount != null">
        available_amount = #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="frozenAmount != null">
        frozen_amount = #{frozenAmount,jdbcType=DECIMAL},
      </if>
      <if test="negativeFlag != null">
        negative_flag = #{negativeFlag,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.verificer.account.provider.entity.Account">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    set customer_id = #{customerId,jdbcType=VARCHAR},
      sub_name = #{subName,jdbcType=VARCHAR},
      available_amount = #{availableAmount,jdbcType=DECIMAL},
      frozen_amount = #{frozenAmount,jdbcType=DECIMAL},
      negative_flag = #{negativeFlag,jdbcType=BIT},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
<!--  以上内容自动生成-->

  <select id="selectByPrimaryKeyForUpdate" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=BIGINT} for update
  </select>

  <select id="selectByIdsForUpdate"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from account
    where id in
      <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
        #{id}
      </foreach>
    for update

  </select>

  <select id="selectByCustomerId"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from account
    where customer_id = #{customerId}
  </select>

  <select id="selectByCustomerIdAndSubName"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from account
    where customer_id = #{customerId}
    and sub_name = #{subName}
  </select>


  <update id="updateBalByCustomerId" >
    update account set available_amount = #{amount}
    where customer_id = #{customerId}
  </update>
</mapper>
