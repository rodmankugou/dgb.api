一、让吴双做一份支持重复拍卖并且支持取消的测试合约Con_T，Con_T用客户的721合约进行主笔
二、在Con_T中测试，检查退款已经NFT的归属权是否正确
三、步骤二检验通过后让吴双还原版本3的合约，重放重复拍卖
四、让吴双更新合约
五、验证退款结果
六、线上触发一个，验证退款以及交割结果
七、逐个触发逐个验证



总体设计
0、整体数据校验，重新确认有哪些有问题的NFT，需要确认的内容包括
    a、没有重复交割
    b、这些NFT最后创建的拍卖时间《 6月25日
1、查出有问题的NFT，将所有nft的status 改成-1
2、查出问题NFT中的需要处理的重复拍卖
3、逐个处理（保留最高价交易，其余的取消），每处理完一个后做处理结果校验，校验不成功则不继续处理


单个NFT的处理逻辑
1、加载该NFT的所有auction（从chainTx中加载）,执行这一步前，先删除重复的交易
2、找出最高价待交割交易Am以及待取消交易Ac
3、为所有的Am和Ac构建账户的入账列表/出账列表（包括bid和rebate），TranExcept
    a、已合约返回的bid列表为准，并且与数据中的bid列表做校验
    a、出入帐记录格式，from to amount time
3.2、将该NFT的status改成0

4、逐一取消Ac，并进行验证
    a、取消前获取当前区块Bl，取消后获取当前区块Bh
    b、判断取消是否成功（调用返回txHash并且通过txHash拿到交易凭证并确认凭证已成功）
    c、搜索高度从[Bl,Bh]的区块中相关地址的所有转账TranReal
    d、对比TranExcept和TranReal，确认TranExcept中的每一笔交易（对比from to amount）都能在TranReal中找到
5、对Am进行交割
    a、取消前获取当前区块Bl，取消后获取当前区块Bh
    b、判断交割是否成功（调用返回txHash并且通过txHash拿到交易凭证并确认凭证已成功）
    c、搜索高度从[Bl,Bh]的区块中相关地址的所有转账TranReal
    d、对比TranExcept和TranReal，确认TranExcept中的每一笔交易（对比from to amount）都能在TranReal中找到
    e、补充对NFT的归属者的判断
6、收集每一个交割和取消操作的信息，输出到文件
    a、包含artworkId，auctionId，chainOrderId，bid列表（bidId，chainBidId，userId，address ,amount,payAmount，tokenHash，转账tokenHash，转账金额，转账地址）,cancel/rebate TxHash




