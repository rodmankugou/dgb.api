<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.verificer.biz.biz.mapper.SettleMapper">
  <resultMap id="BaseResultMap" type="com.verificer.biz.biz.entity.Settle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="shop_id" jdbcType="VARCHAR" property="shopId" />
    <result column="child_shop_id" jdbcType="VARCHAR" property="childShopId" />
    <result column="rel_id" jdbcType="BIGINT" property="relId" />
    <result column="commission_rate" jdbcType="DECIMAL" property="commissionRate" />
    <result column="total_phase" jdbcType="INTEGER" property="totalPhase" />
    <result column="cal_pahse" jdbcType="INTEGER" property="calPahse" />
    <result column="settle_phase" jdbcType="INTEGER" property="settlePhase" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="phase_amount" jdbcType="DECIMAL" property="phaseAmount" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="next_cal_time" jdbcType="BIGINT" property="nextCalTime" />
    <result column="finish_cal_flag" jdbcType="BIT" property="finishCalFlag" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, type, shop_id, child_shop_id, rel_id, commission_rate, total_phase, cal_pahse, 
    settle_phase, total_amount, phase_amount, title, next_cal_time, finish_cal_flag, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from settle
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from settle
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.verificer.biz.biz.entity.Settle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into settle (type, shop_id, child_shop_id, 
      rel_id, commission_rate, total_phase, 
      cal_pahse, settle_phase, total_amount, 
      phase_amount, title, next_cal_time, 
      finish_cal_flag, create_time)
    values (#{type,jdbcType=TINYINT}, #{shopId,jdbcType=VARCHAR}, #{childShopId,jdbcType=VARCHAR}, 
      #{relId,jdbcType=BIGINT}, #{commissionRate,jdbcType=DECIMAL}, #{totalPhase,jdbcType=INTEGER}, 
      #{calPahse,jdbcType=INTEGER}, #{settlePhase,jdbcType=INTEGER}, #{totalAmount,jdbcType=DECIMAL}, 
      #{phaseAmount,jdbcType=DECIMAL}, #{title,jdbcType=VARCHAR}, #{nextCalTime,jdbcType=BIGINT}, 
      #{finishCalFlag,jdbcType=BIT}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.verificer.biz.biz.entity.Settle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into settle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        type,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="childShopId != null">
        child_shop_id,
      </if>
      <if test="relId != null">
        rel_id,
      </if>
      <if test="commissionRate != null">
        commission_rate,
      </if>
      <if test="totalPhase != null">
        total_phase,
      </if>
      <if test="calPahse != null">
        cal_pahse,
      </if>
      <if test="settlePhase != null">
        settle_phase,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="phaseAmount != null">
        phase_amount,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="nextCalTime != null">
        next_cal_time,
      </if>
      <if test="finishCalFlag != null">
        finish_cal_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="childShopId != null">
        #{childShopId,jdbcType=VARCHAR},
      </if>
      <if test="relId != null">
        #{relId,jdbcType=BIGINT},
      </if>
      <if test="commissionRate != null">
        #{commissionRate,jdbcType=DECIMAL},
      </if>
      <if test="totalPhase != null">
        #{totalPhase,jdbcType=INTEGER},
      </if>
      <if test="calPahse != null">
        #{calPahse,jdbcType=INTEGER},
      </if>
      <if test="settlePhase != null">
        #{settlePhase,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="phaseAmount != null">
        #{phaseAmount,jdbcType=DECIMAL},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="nextCalTime != null">
        #{nextCalTime,jdbcType=BIGINT},
      </if>
      <if test="finishCalFlag != null">
        #{finishCalFlag,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.verificer.biz.biz.entity.Settle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update settle
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="childShopId != null">
        child_shop_id = #{childShopId,jdbcType=VARCHAR},
      </if>
      <if test="relId != null">
        rel_id = #{relId,jdbcType=BIGINT},
      </if>
      <if test="commissionRate != null">
        commission_rate = #{commissionRate,jdbcType=DECIMAL},
      </if>
      <if test="totalPhase != null">
        total_phase = #{totalPhase,jdbcType=INTEGER},
      </if>
      <if test="calPahse != null">
        cal_pahse = #{calPahse,jdbcType=INTEGER},
      </if>
      <if test="settlePhase != null">
        settle_phase = #{settlePhase,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="phaseAmount != null">
        phase_amount = #{phaseAmount,jdbcType=DECIMAL},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="nextCalTime != null">
        next_cal_time = #{nextCalTime,jdbcType=BIGINT},
      </if>
      <if test="finishCalFlag != null">
        finish_cal_flag = #{finishCalFlag,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.verificer.biz.biz.entity.Settle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update settle
    set type = #{type,jdbcType=TINYINT},
      shop_id = #{shopId,jdbcType=VARCHAR},
      child_shop_id = #{childShopId,jdbcType=VARCHAR},
      rel_id = #{relId,jdbcType=BIGINT},
      commission_rate = #{commissionRate,jdbcType=DECIMAL},
      total_phase = #{totalPhase,jdbcType=INTEGER},
      cal_pahse = #{calPahse,jdbcType=INTEGER},
      settle_phase = #{settlePhase,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      phase_amount = #{phaseAmount,jdbcType=DECIMAL},
      title = #{title,jdbcType=VARCHAR},
      next_cal_time = #{nextCalTime,jdbcType=BIGINT},
      finish_cal_flag = #{finishCalFlag,jdbcType=BIT},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
<!--以上内容自动生成-->


    <resultMap id="staRstMap" type="com.verificer.biz.beans.vo.settle.SettleStaVo">

        <result column="rest_count" jdbcType="INTEGER" property="restCount"/>
        <result column="settled_count" jdbcType="INTEGER" property="settledCount"/>
        <result column="rest_amount" jdbcType="DECIMAL" property="restAmount"/>
        <result column="settled_amount" jdbcType="DECIMAL" property="settledAmount"/>
    </resultMap>

    <select id="sta" parameterType="java.lang.Long" resultMap="staRstMap">

        select
        ifnull(sum(total_phase-settle_phase),0) as rest_count,
        ifnull(sum((total_phase-settle_phase) * phase_amount),0) as rest_amount,
        ifnull(sum(settle_phase),0) as settled_count,
        ifnull(sum(settle_phase * phase_amount),0) as settled_amount
        from settle
        where 1=1
        <if test="shopId != null and shopId != ''">
            and shop_id = #{shopId}
        </if>
    </select>

    <select id="getReadySettle" resultMap="BaseResultMap">
        select * from settle
            where #{now} > next_cal_time and finish_cal_flag = 0
        limit 1
    </select>

    <select id="getMatchSettle" resultMap="BaseResultMap">
        select * from settle
            where #{nextCalTime} = next_cal_time and finish_cal_flag = 0
            and shop_id = #{shopId}
        limit 1
    </select>

  <select id="getAndLock" resultMap="BaseResultMap">
    select * from settle
    where  id = #{id} for update
  </select>

  <update id="addSettlePhase">
    update settle set settle_phase = (settle_phase+1)
    where id in
    <foreach item="id" collection="ids" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>


</mapper>
